stages:
   - prepare
   - process


variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONDA_BASE_IMAGE: $CI_REGISTRY/leipziggiesst/treedata/conda:latest
  CONTAINER_BASE_IMAGE: $CI_REGISTRY/leipziggiesst/treedata/treedata:latest

build-conda-image:
  when: manual
  stage: prepare
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd ./.docker
    - docker build -t $CONDA_BASE_IMAGE .
    - docker push $CONDA_BASE_IMAGE


build-base-image:
  when: manual
  stage: prepare
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CONTAINER_BASE_IMAGE .
    - docker push $CONTAINER_BASE_IMAGE


download-and-process-treedata:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $UPDATE_TARGET == "trees"
      when: always
    - when: manual
  stage: process
  environment:
    name: $CI_COMMIT_REF_NAME
  image: $CONTAINER_BASE_IMAGE
  script:
    - /bin/bash -c "conda run -n treedata python ./treedata/main.py trees --source-encoding iso-8859-1 --xml-file-name wfs --skip-convert-to-geojson"
    - /bin/bash -c "sed -i s/UTF-8/ISO-8859-1/g resources/trees/wfs.xml"
    - /bin/bash -c "sed -i s/ä/aaa/g resources/trees/wfs.xml"
    - /bin/bash -c "sed -i s/Ä/AAA/g resources/trees/wfs.xml"
    - /bin/bash -c "sed -i s/ö/ooo/g resources/trees/wfs.xml"
    - /bin/bash -c "sed -i s/Ö/OOO/g resources/trees/wfs.xml"
    - /bin/bash -c "sed -i s/ü/uuu/g resources/trees/wfs.xml"
    - /bin/bash -c "sed -i s/Ü/UUU/g resources/trees/wfs.xml"
    - /bin/bash -c "sed -i s/ß/ssss/g resources/trees/wfs.xml"
    - /bin/bash -c "conda run -n treedata python ./treedata/main.py trees --source-encoding iso-8859-1 --xml-file-name wfs --geojson-file-name trees --skip-download-wfs-xml"
    - /bin/bash -c "sed -i s/aaa/ä/g resources/trees/trees.geojson"
    - /bin/bash -c "sed -i s/AAA/Ä/g resources/trees/trees.geojson"
    - /bin/bash -c "sed -i s/ooo/ö/g resources/trees/trees.geojson"
    - /bin/bash -c "sed -i s/OOO/Ö/g resources/trees/trees.geojson"
    - /bin/bash -c "sed -i s/uuu/ü/g resources/trees/trees.geojson"
    - /bin/bash -c "sed -i s/UUU/Ü/g resources/trees/trees.geojson"
    - /bin/bash -c "sed -i s/ssss/ß/g resources/trees/trees.geojson"
    - /bin/bash -c "conda run -n treedata python ./treedata/main.py trees_process --city-shape-geojson-file-name city_shape --trees-geojson-file-name trees --geojson-file-name trees-transformed --database-table-name trees_tmp"


download-and-process-radolan-data:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $UPDATE_TARGET == "radolan"
      when: always
    - when: manual
  stage: process
  environment:
    name: $CI_COMMIT_REF_NAME
  image: $CONTAINER_BASE_IMAGE
  variables:
    RADOLAN_DAYS: 2
  script:
    - /bin/bash -c "conda install -y -c conda-forge gdal krb5"
    - /bin/bash -c "pip install gssapi"
    - /bin/bash -c "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cpplibs/sqlite-3.44.2/lib && gdalwarp --version"
    - /bin/bash -c "export PROJ_LIB=/root/miniconda3/share/proj && conda run -n treedata python ./treedata/main.py weather --start-days-offset $RADOLAN_DAYS --end-days-offset 1 --city-shape-geojson-file-name city_shape --city-shape-buffer-file-name city_shape-buffered"
